[
~[tlist_sql;
WITH ranked_results AS (
    SELECT
        schoolstaff.dcid,
        users.first_name,
        users.last_name,
        CASE
            WHEN schoolstaff.status = 1 THEN 'Active'
            ELSE 'Inactive'
        END AS status,
        COALESCE(
            (
                SELECT LISTAGG(s.name, ', ') WITHIN GROUP (ORDER BY s.name)
                FROM schools s
                WHERE INSTR('CHR(59)' || users.canchangeschool || 'CHR(59)', 'CHR(59)' || s.school_number || 'CHR(59)') > 0
            ),
            (SELECT name FROM schools WHERE school_number = users.HomeSchoolID)
        ) AS schools,
        ROW_NUMBER() OVER (PARTITION BY users.first_name, users.last_name ORDER BY users.last_name, users.first_name) AS rn
    FROM
        users
        LEFT JOIN schoolstaff ON users.dcid = schoolstaff.users_dcid
    WHERE
        (UTL_MATCH.JARO_WINKLER_SIMILARITY(UPPER(users.first_name), UPPER('~(gpv.firstName)')) >= 75)
        AND (UTL_MATCH.JARO_WINKLER_SIMILARITY(UPPER(users.last_name), UPPER('~(gpv.lastName)')) >= 90 OR UTL_MATCH.JARO_WINKLER_SIMILARITY(UPPER(users.last_name), UPPER('~(gpv.maidenName)')) >= 90)
    )
    SELECT
        dcid,
        first_name,
        last_name,
        status,
        schools
    FROM
        ranked_results
    WHERE
        rn = 1
    ORDER BY
        last_name,
        first_name
;]
    {
        "dcid": ~(1),
        "first_name":"~(2;JSON)",
        "last_name":"~(3;JSON)",
        "status":"~(4;JSON)",
        "school_name":"~(5;JSON)"
    },
[/tlist_sql]
{}]